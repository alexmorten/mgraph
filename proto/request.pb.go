// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/request.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QueryNode struct {
	Key                  string                     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type                 string                     `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           map[string]*AttributeValue `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Relations            []*QueryRelation           `protobuf:"bytes,4,rep,name=relations,proto3" json:"relations,omitempty"`
	ResultName           string                     `protobuf:"bytes,5,opt,name=result_name,json=resultName,proto3" json:"result_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *QueryNode) Reset()         { *m = QueryNode{} }
func (m *QueryNode) String() string { return proto.CompactTextString(m) }
func (*QueryNode) ProtoMessage()    {}
func (*QueryNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{0}
}
func (m *QueryNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryNode.Unmarshal(m, b)
}
func (m *QueryNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryNode.Marshal(b, m, deterministic)
}
func (dst *QueryNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryNode.Merge(dst, src)
}
func (m *QueryNode) XXX_Size() int {
	return xxx_messageInfo_QueryNode.Size(m)
}
func (m *QueryNode) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryNode.DiscardUnknown(m)
}

var xxx_messageInfo_QueryNode proto.InternalMessageInfo

func (m *QueryNode) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryNode) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *QueryNode) GetAttributes() map[string]*AttributeValue {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *QueryNode) GetRelations() []*QueryRelation {
	if m != nil {
		return m.Relations
	}
	return nil
}

func (m *QueryNode) GetResultName() string {
	if m != nil {
		return m.ResultName
	}
	return ""
}

type QueryRelation struct {
	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Direction:
	//	*QueryRelation_From
	//	*QueryRelation_To
	Direction            isQueryRelation_Direction  `protobuf_oneof:"direction"`
	Attributes           map[string]*AttributeValue `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResultName           string                     `protobuf:"bytes,6,opt,name=result_name,json=resultName,proto3" json:"result_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *QueryRelation) Reset()         { *m = QueryRelation{} }
func (m *QueryRelation) String() string { return proto.CompactTextString(m) }
func (*QueryRelation) ProtoMessage()    {}
func (*QueryRelation) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{1}
}
func (m *QueryRelation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRelation.Unmarshal(m, b)
}
func (m *QueryRelation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRelation.Marshal(b, m, deterministic)
}
func (dst *QueryRelation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRelation.Merge(dst, src)
}
func (m *QueryRelation) XXX_Size() int {
	return xxx_messageInfo_QueryRelation.Size(m)
}
func (m *QueryRelation) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRelation.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRelation proto.InternalMessageInfo

func (m *QueryRelation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryRelation) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isQueryRelation_Direction interface {
	isQueryRelation_Direction()
}

type QueryRelation_From struct {
	From *QueryNode `protobuf:"bytes,3,opt,name=from,proto3,oneof"`
}

type QueryRelation_To struct {
	To *QueryNode `protobuf:"bytes,4,opt,name=to,proto3,oneof"`
}

func (*QueryRelation_From) isQueryRelation_Direction() {}

func (*QueryRelation_To) isQueryRelation_Direction() {}

func (m *QueryRelation) GetDirection() isQueryRelation_Direction {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *QueryRelation) GetFrom() *QueryNode {
	if x, ok := m.GetDirection().(*QueryRelation_From); ok {
		return x.From
	}
	return nil
}

func (m *QueryRelation) GetTo() *QueryNode {
	if x, ok := m.GetDirection().(*QueryRelation_To); ok {
		return x.To
	}
	return nil
}

func (m *QueryRelation) GetAttributes() map[string]*AttributeValue {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *QueryRelation) GetResultName() string {
	if m != nil {
		return m.ResultName
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*QueryRelation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _QueryRelation_OneofMarshaler, _QueryRelation_OneofUnmarshaler, _QueryRelation_OneofSizer, []interface{}{
		(*QueryRelation_From)(nil),
		(*QueryRelation_To)(nil),
	}
}

func _QueryRelation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*QueryRelation)
	// direction
	switch x := m.Direction.(type) {
	case *QueryRelation_From:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.From); err != nil {
			return err
		}
	case *QueryRelation_To:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.To); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("QueryRelation.Direction has unexpected type %T", x)
	}
	return nil
}

func _QueryRelation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*QueryRelation)
	switch tag {
	case 3: // direction.from
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QueryNode)
		err := b.DecodeMessage(msg)
		m.Direction = &QueryRelation_From{msg}
		return true, err
	case 4: // direction.to
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QueryNode)
		err := b.DecodeMessage(msg)
		m.Direction = &QueryRelation_To{msg}
		return true, err
	default:
		return false, nil
	}
}

func _QueryRelation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*QueryRelation)
	// direction
	switch x := m.Direction.(type) {
	case *QueryRelation_From:
		s := proto.Size(x.From)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *QueryRelation_To:
		s := proto.Size(x.To)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateStatement struct {
	Root                 *QueryNode `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateStatement) Reset()         { *m = CreateStatement{} }
func (m *CreateStatement) String() string { return proto.CompactTextString(m) }
func (*CreateStatement) ProtoMessage()    {}
func (*CreateStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{2}
}
func (m *CreateStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStatement.Unmarshal(m, b)
}
func (m *CreateStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStatement.Marshal(b, m, deterministic)
}
func (dst *CreateStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStatement.Merge(dst, src)
}
func (m *CreateStatement) XXX_Size() int {
	return xxx_messageInfo_CreateStatement.Size(m)
}
func (m *CreateStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStatement.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStatement proto.InternalMessageInfo

func (m *CreateStatement) GetRoot() *QueryNode {
	if m != nil {
		return m.Root
	}
	return nil
}

type FindStatement struct {
	Root                 *QueryNode `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindStatement) Reset()         { *m = FindStatement{} }
func (m *FindStatement) String() string { return proto.CompactTextString(m) }
func (*FindStatement) ProtoMessage()    {}
func (*FindStatement) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{3}
}
func (m *FindStatement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindStatement.Unmarshal(m, b)
}
func (m *FindStatement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindStatement.Marshal(b, m, deterministic)
}
func (dst *FindStatement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindStatement.Merge(dst, src)
}
func (m *FindStatement) XXX_Size() int {
	return xxx_messageInfo_FindStatement.Size(m)
}
func (m *FindStatement) XXX_DiscardUnknown() {
	xxx_messageInfo_FindStatement.DiscardUnknown(m)
}

var xxx_messageInfo_FindStatement proto.InternalMessageInfo

func (m *FindStatement) GetRoot() *QueryNode {
	if m != nil {
		return m.Root
	}
	return nil
}

type Statement struct {
	// Types that are valid to be assigned to Type:
	//	*Statement_Create
	//	*Statement_Find
	Type                 isStatement_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Statement) Reset()         { *m = Statement{} }
func (m *Statement) String() string { return proto.CompactTextString(m) }
func (*Statement) ProtoMessage()    {}
func (*Statement) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{4}
}
func (m *Statement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Statement.Unmarshal(m, b)
}
func (m *Statement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Statement.Marshal(b, m, deterministic)
}
func (dst *Statement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Statement.Merge(dst, src)
}
func (m *Statement) XXX_Size() int {
	return xxx_messageInfo_Statement.Size(m)
}
func (m *Statement) XXX_DiscardUnknown() {
	xxx_messageInfo_Statement.DiscardUnknown(m)
}

var xxx_messageInfo_Statement proto.InternalMessageInfo

type isStatement_Type interface {
	isStatement_Type()
}

type Statement_Create struct {
	Create *CreateStatement `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type Statement_Find struct {
	Find *FindStatement `protobuf:"bytes,2,opt,name=find,proto3,oneof"`
}

func (*Statement_Create) isStatement_Type() {}

func (*Statement_Find) isStatement_Type() {}

func (m *Statement) GetType() isStatement_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Statement) GetCreate() *CreateStatement {
	if x, ok := m.GetType().(*Statement_Create); ok {
		return x.Create
	}
	return nil
}

func (m *Statement) GetFind() *FindStatement {
	if x, ok := m.GetType().(*Statement_Find); ok {
		return x.Find
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Statement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Statement_OneofMarshaler, _Statement_OneofUnmarshaler, _Statement_OneofSizer, []interface{}{
		(*Statement_Create)(nil),
		(*Statement_Find)(nil),
	}
}

func _Statement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Statement)
	// type
	switch x := m.Type.(type) {
	case *Statement_Create:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *Statement_Find:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Find); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Statement.Type has unexpected type %T", x)
	}
	return nil
}

func _Statement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Statement)
	switch tag {
	case 1: // type.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateStatement)
		err := b.DecodeMessage(msg)
		m.Type = &Statement_Create{msg}
		return true, err
	case 2: // type.find
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FindStatement)
		err := b.DecodeMessage(msg)
		m.Type = &Statement_Find{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Statement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Statement)
	// type
	switch x := m.Type.(type) {
	case *Statement_Create:
		s := proto.Size(x.Create)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Statement_Find:
		s := proto.Size(x.Find)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type StatementResult struct {
	Root                 *QueryNode `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatementResult) Reset()         { *m = StatementResult{} }
func (m *StatementResult) String() string { return proto.CompactTextString(m) }
func (*StatementResult) ProtoMessage()    {}
func (*StatementResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{5}
}
func (m *StatementResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatementResult.Unmarshal(m, b)
}
func (m *StatementResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatementResult.Marshal(b, m, deterministic)
}
func (dst *StatementResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatementResult.Merge(dst, src)
}
func (m *StatementResult) XXX_Size() int {
	return xxx_messageInfo_StatementResult.Size(m)
}
func (m *StatementResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StatementResult.DiscardUnknown(m)
}

var xxx_messageInfo_StatementResult proto.InternalMessageInfo

func (m *StatementResult) GetRoot() *QueryNode {
	if m != nil {
		return m.Root
	}
	return nil
}

type Query struct {
	Statements           []*Statement `protobuf:"bytes,1,rep,name=statements,proto3" json:"statements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{6}
}
func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (dst *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(dst, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetStatements() []*Statement {
	if m != nil {
		return m.Statements
	}
	return nil
}

type QueryResponse struct {
	Result               []*StatementResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_request_b9a2c51f8eb21040, []int{7}
}
func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (dst *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(dst, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetResult() []*StatementResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryNode)(nil), "proto.QueryNode")
	proto.RegisterMapType((map[string]*AttributeValue)(nil), "proto.QueryNode.AttributesEntry")
	proto.RegisterType((*QueryRelation)(nil), "proto.QueryRelation")
	proto.RegisterMapType((map[string]*AttributeValue)(nil), "proto.QueryRelation.AttributesEntry")
	proto.RegisterType((*CreateStatement)(nil), "proto.CreateStatement")
	proto.RegisterType((*FindStatement)(nil), "proto.FindStatement")
	proto.RegisterType((*Statement)(nil), "proto.Statement")
	proto.RegisterType((*StatementResult)(nil), "proto.StatementResult")
	proto.RegisterType((*Query)(nil), "proto.Query")
	proto.RegisterType((*QueryResponse)(nil), "proto.QueryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MGraphClient is the client API for MGraph service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MGraphClient interface {
	ReadWrite(ctx context.Context, in *Query, opts ...grpc.CallOption) (*QueryResponse, error)
	Read(ctx context.Context, in *Query, opts ...grpc.CallOption) (*QueryResponse, error)
}

type mGraphClient struct {
	cc *grpc.ClientConn
}

func NewMGraphClient(cc *grpc.ClientConn) MGraphClient {
	return &mGraphClient{cc}
}

func (c *mGraphClient) ReadWrite(ctx context.Context, in *Query, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/proto.MGraph/ReadWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mGraphClient) Read(ctx context.Context, in *Query, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/proto.MGraph/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MGraphServer is the server API for MGraph service.
type MGraphServer interface {
	ReadWrite(context.Context, *Query) (*QueryResponse, error)
	Read(context.Context, *Query) (*QueryResponse, error)
}

func RegisterMGraphServer(s *grpc.Server, srv MGraphServer) {
	s.RegisterService(&_MGraph_serviceDesc, srv)
}

func _MGraph_ReadWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MGraphServer).ReadWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MGraph/ReadWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MGraphServer).ReadWrite(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _MGraph_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MGraphServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MGraph/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MGraphServer).Read(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _MGraph_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MGraph",
	HandlerType: (*MGraphServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadWrite",
			Handler:    _MGraph_ReadWrite_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _MGraph_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/request.proto",
}

func init() { proto.RegisterFile("proto/request.proto", fileDescriptor_request_b9a2c51f8eb21040) }

var fileDescriptor_request_b9a2c51f8eb21040 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x6d, 0x1c, 0xdb, 0x92, 0x27, 0x94, 0x56, 0x0b, 0x54, 0x56, 0x2e, 0x44, 0x56, 0x85, 0xaa,
	0x22, 0xa5, 0x55, 0x10, 0xe2, 0xe3, 0x02, 0x94, 0xaf, 0x5e, 0xa8, 0xc4, 0x82, 0xe0, 0x88, 0x36,
	0xf5, 0x54, 0x58, 0x24, 0xde, 0x74, 0x77, 0x8c, 0x94, 0x3f, 0xc3, 0x1f, 0xe2, 0x4f, 0x21, 0xcf,
	0x6e, 0x9c, 0xc4, 0x04, 0x14, 0x2e, 0x9c, 0xb2, 0x99, 0xf7, 0xde, 0xcc, 0x9b, 0xb7, 0x6b, 0xb8,
	0x35, 0x33, 0x9a, 0xf4, 0x89, 0xc1, 0xeb, 0x0a, 0x2d, 0x0d, 0xf9, 0x9f, 0x88, 0xf8, 0xa7, 0x7f,
	0xd3, 0x61, 0xf9, 0xd8, 0x95, 0xb3, 0x1f, 0x01, 0x24, 0xef, 0x2b, 0x34, 0xf3, 0x0b, 0x9d, 0xa3,
	0xd8, 0x87, 0xee, 0x37, 0x9c, 0xa7, 0x9d, 0x41, 0xe7, 0x28, 0x91, 0xf5, 0x51, 0x08, 0x08, 0x69,
	0x3e, 0xc3, 0x34, 0xe0, 0x12, 0x9f, 0xc5, 0x73, 0x00, 0x45, 0x64, 0x8a, 0x71, 0x45, 0x68, 0xd3,
	0xee, 0xa0, 0x7b, 0xd4, 0x1b, 0x0d, 0x5c, 0xbf, 0x61, 0xd3, 0x6b, 0xf8, 0xa2, 0xa1, 0xbc, 0x2e,
	0xc9, 0xcc, 0xe5, 0x8a, 0x46, 0x8c, 0x20, 0x31, 0x38, 0x51, 0x54, 0xe8, 0xd2, 0xa6, 0x21, 0x37,
	0xb8, 0xbd, 0xda, 0x40, 0x7a, 0x50, 0x2e, 0x69, 0xe2, 0x2e, 0xf4, 0x0c, 0xda, 0x6a, 0x42, 0x5f,
	0x4a, 0x35, 0xc5, 0x34, 0x62, 0x43, 0xe0, 0x4a, 0x17, 0x6a, 0x8a, 0xfd, 0x8f, 0xb0, 0xd7, 0x9a,
	0xb9, 0x61, 0x9f, 0xfb, 0x10, 0x7d, 0x57, 0x93, 0xca, 0x2d, 0xd4, 0x1b, 0xdd, 0xf1, 0x53, 0x1b,
	0xe1, 0xa7, 0x1a, 0x94, 0x8e, 0xf3, 0x34, 0x78, 0xdc, 0xc9, 0x7e, 0x06, 0xb0, 0xbb, 0xe6, 0x69,
	0xcb, 0x90, 0xee, 0x41, 0x78, 0x65, 0xf4, 0x34, 0xed, 0xf2, 0x9c, 0xfd, 0x76, 0x3c, 0xe7, 0x3b,
	0x92, 0x71, 0x91, 0x41, 0x40, 0x3a, 0x0d, 0xff, 0xc8, 0x0a, 0x48, 0x8b, 0x57, 0x6b, 0x81, 0x47,
	0x9c, 0xd7, 0xe1, 0xa6, 0xbc, 0xfe, 0x1a, 0x7a, 0x2b, 0xc0, 0xf8, 0xff, 0x04, 0x78, 0xd6, 0x83,
	0x24, 0x2f, 0x0c, 0x5e, 0xd6, 0xfe, 0xb2, 0x47, 0xb0, 0xf7, 0xd2, 0xa0, 0x22, 0xfc, 0x40, 0x8a,
	0x70, 0x8a, 0x25, 0x89, 0x43, 0x08, 0x8d, 0xd6, 0xc4, 0x33, 0x36, 0x44, 0x20, 0x19, 0xcd, 0x1e,
	0xc2, 0xee, 0x9b, 0xa2, 0xcc, 0xff, 0x55, 0x76, 0x0d, 0xc9, 0x52, 0x72, 0x0a, 0xf1, 0x25, 0x0f,
	0xf7, 0xa2, 0x03, 0x2f, 0x6a, 0x39, 0x3a, 0xdf, 0x91, 0x9e, 0x27, 0x8e, 0x21, 0xbc, 0x2a, 0xca,
	0xdc, 0xef, 0xba, 0x78, 0xa2, 0x6b, 0x46, 0xf8, 0x22, 0x8b, 0x32, 0x3f, 0x8b, 0xdd, 0x23, 0xa8,
	0x57, 0x6c, 0x40, 0xc9, 0xe1, 0x6e, 0xe9, 0xf5, 0x09, 0x44, 0x5c, 0x12, 0xa7, 0x00, 0x76, 0xd1,
	0xc1, 0xa6, 0x1d, 0xbe, 0xee, 0x85, 0x68, 0xd9, 0x7a, 0x85, 0x93, 0x3d, 0x6b, 0xde, 0xa8, 0x9d,
	0xe9, 0xd2, 0xa2, 0x18, 0x42, 0xec, 0x2e, 0xd6, 0xcb, 0x0f, 0x7e, 0x93, 0x33, 0x2a, 0x3d, 0x6b,
	0x84, 0x10, 0xbf, 0x7b, 0x6b, 0xd4, 0xec, 0xab, 0x38, 0x81, 0x44, 0xa2, 0xca, 0x3f, 0x9b, 0x82,
	0x50, 0xdc, 0x58, 0xb5, 0xda, 0x6f, 0x7d, 0xa2, 0x7e, 0xd4, 0x31, 0x84, 0xb5, 0x60, 0x1b, 0xee,
	0x38, 0xe6, 0xe2, 0x83, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x16, 0xe9, 0x8a, 0xf2, 0xa2, 0x04,
	0x00, 0x00,
}
